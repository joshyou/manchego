;(cond cond-clause ...)
;  cond-clause = [test-expr then-body ...] or
;  [else then-body...] or
;  [test-expr => proc-expr] (unsupported) or
;  [test-expr]

; cond-clause = [test-expr then-body ...]
(cond
	((zero? 1) "A")
	((zero? 0) "B")
	(else "C"))

;  [else then-body...]
(cond
	((zero? 1) "a")
	(else "else case"))

;  [test-expr]
(cond
	((zero? 1) "a")
	((zero? 0)))
